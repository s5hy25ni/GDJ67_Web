package com.min.edu.ctrl;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.tomcat.util.http.fileupload.MultipartStream;

import com.min.edu.dto.BoardDto;
import com.min.edu.dto.FileBoardDto;
import com.min.edu.model.BoardFileImpl;
import com.min.edu.model.IBoardFile;
import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;
import com.oreilly.servlet.multipart.MultipartParser;

public class FileController extends HttpServlet{

	private static final long serialVersionUID = 938871408338950278L;
	
	// 상세, 조회, 글작성, 다운로드
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		req.setCharacterEncoding("UTF-8");
		resp.setContentType("text/html; charset=UTF-8;");
		
		System.out.println("doGet 실행");
		
		IBoardFile dao = new BoardFileImpl();
		
		String command = req.getParameter("command");
		System.out.println("요청받은 command : "+command);
		
		if(command.equalsIgnoreCase("boardList")) {
			List<BoardDto> lists = dao.getAllList();
			req.setAttribute("lists", lists);
			req.getRequestDispatcher("/WEB-INF/views/boardList.jsp").forward(req, resp);
			
		} else if(command.equalsIgnoreCase("detail")) {
			String seq = req.getParameter("seq");
			List<BoardDto> dtos = dao.getBoard(seq);
			req.setAttribute("dto", dtos.get(0));
			req.getRequestDispatcher("/WEB-INF/views/boardDetail.jsp").forward(req, resp);
		} else if(command.equalsIgnoreCase("boardWriteForm")) {
			req.getRequestDispatcher("/WEB-INF/views/boardWriteForm.jsp").forward(req, resp);
		}
	}
	
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		req.setCharacterEncoding("UTF-8");
		resp.setContentType("text/html; charset=UTF-8");
		
		System.out.println("doPost 실행");
		
		/* 
		 * 화면(view:HTML)의 form요소의 전송타입이 application/x-www-form-urlencode 라면 text만을 전송
		 * String writer = req.getParameter("writer"); String title =
		 * req.getParameter("title"); String filename = req.getParameter("filename");
		 * String content = req.getParameter("content");
		 * System.out.printf("%s %s %s %s", writer, title, filename, content);
		 */
		
		// 화면(view:HTML)의 form요소의 전송타입이 text와 data라면 multipart/form-data로 선언해야 함
		// server에서는 요청받은 request를 multipartRequest로 처리해줘야 한다.
		
		/*
		 *  절대경로(변하지 않는 주소)와 상대경로(변하는 주소)
		 *  절대경로 예시 : local의 특정 위치(window 기준 ex>c:\\upload\\)
		 *  상대경로 : WAS(tomcat)의 설치 위치 (Run > Run Configuration > tomcat > dtwp ~~~)
		 *  ※※※ 미리보기 혹은 refresh 없이(비동기식) 미리보기 하기 위해서는 상대경로 작업을 해야 함 
		 */
		
		/*
		 * MultiPartRequest의 필요값
		 * HttpServletRequest, saveDirectory(저장경로 절대/상대), maxPostSize(파일의 최댓값), Encoding, policy
		 */
		
		// 절대경로(서버는 리눅스, 역슬래시 XX)
		String saveDirectory = "C:\\eclipse_web\\workspace_web\\web014_FileBoard\\src\\main\\webapp\\upload";
		
		// 상대경로(context root)
		ServletContext context = req.getServletContext();
		String saveDirectory2 = context.getRealPath("upload");
		String saveDirectory3 = req.getServletContext()+"/upload";
		
		System.out.println("절대경로	: "+saveDirectory);
		System.out.println("상대경로1	: "+saveDirectory2);
		System.out.println("상대경로2	: "+saveDirectory3);
		
		int maxPostSize = 10 * 1024 * 1024; // 1kb -> 1MB -> 10MB
		String encoding = "UTF-8";
		
		// MultiPartRequest로 요청받은 Text와 Data를 받아와 객체로 만든다.
		MultipartRequest multi = new MultipartRequest(req, saveDirectory2, maxPostSize, encoding, new DefaultFileRenamePolicy());
		
		// 1) 전달받은 TEXT 받기
		String writer = multi.getParameter("writer");
		String title = multi.getParameter("title");
		String content = multi.getParameter("content");
		Stirng origin_fname = multi.getOriginalFileName("filename");
		
		System.out.printf("%s, %s, %s \n", writer, title, content);
		
		// 2) 파일 업로드
		String stored_fname = null;
		int file_size = 0;
		FileBoardDto fDto = null;
	}
}
